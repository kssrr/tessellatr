% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/poisson_disk_sampling.R
\name{poisson_disk_sampling}
\alias{poisson_disk_sampling}
\title{Generate quasi-random points using Poisson Disk Sampling}
\usage{
poisson_disk_sampling(
  polygon,
  min_dist,
  planar_crs = NA,
  k = 30,
  cores = parallel::detectCores()
)
}
\arguments{
\item{polygon}{Polygon to use as base for sampling.}

\item{min_dist}{Minimum distance between points (in units of the object's crs;
check using \code{sf::st_crs()})}

\item{planar_crs}{Intermediate crs to use for point generation; defaults to
Web Mercator.}

\item{k}{Number of points to sample (i.e. try to place) for each active point/
iteration; defaults to 30.}

\item{cores}{Number of CPU cores/threads to allocate for the parallelizable
sequences. By default, parallelization occurs across all available cores.}
}
\value{
A \code{sf}-object of type POINT.
}
\description{
Generate quasi-random points inside the bounding box of an \code{sf} POLYGON or
MULTIPOLYGON object. This function is heavily inspired by Bridson's algorithm
for fast n-dimensional Poisson Disk Sampling.
}
\examples{
germany <- rnaturalearth::ne_countries(country = "Germany", returnclass = "sf")
test <- poisson_disk_sampling(germany, min_dist = 100000)

germany |> 
  ggplot() +
  geom_sf() +
  geom_sf(test, mapping = aes())
}
